{"version":3,"file":"static/js/movies-page.2e8035fd.chunk.js","mappings":"qKA0BA,IAtBmB,SAAC,GAAD,IAAGA,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACf,wBACKD,EAAOE,KAAI,SAAAC,GACZ,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MACZ,OAAO,yBACP,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACKI,KAFWD,U,sKCHT,SAASK,IACpB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,MAArC,eAAOV,EAAP,KAAegB,EAAf,KACMf,GAAWgB,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACLJ,EAAaK,IAAI,UAGlB,mCAAC,8GAEoBC,EAAAA,EAAAA,IAAkBN,GAFtC,OAEGO,EAFH,OAGDL,EAAUK,GACLA,EAASC,QACZC,MAAM,kCALP,gDAQDC,QAAQC,MAAR,MARC,yDAAD,yDAWH,CAACX,IAgBJ,OACE,iCACE,kBAAMY,SAZU,SAAAC,GAChBA,EAAEC,iBACF,IAAMC,EAAelB,EAAMmB,OAC7B,IAAKD,EACH,OAAON,MAAM,iCAEfR,EAAgB,CAAEJ,MAAOkB,IACzBjB,EAAS,KAKP,WACE,kBAAOmB,KAAK,OAAOC,MAAOrB,EAAOsB,SAjBnB,SAAAN,GAClBf,EAASe,EAAEO,cAAcF,WAiBrB,mBAAQD,KAAK,SAAb,uBAED/B,IAAU,SAAC,IAAD,CAAYA,OAAQA,EAAQmC,IAAK,IAAKlC,SAAUA","sources":["components/MoviesList/MoviesList.jsx","views/MoviesPage.jsx"],"sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies, location }) => (\n    <ol>\n        {movies.map(movie => {\n        const { id, title } = movie;\n        return <li key={id}>\n        <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n        </Link>\n        </li>\n    })}\n    </ol>\n  );\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default MoviesList;","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'services/api';\nimport MoviesList from '../components/MoviesList/MoviesList';\n\nexport default function SearchMovies() {\n    const [query, setQuery] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState(null);\n    const location = useLocation();\n\n\n    useEffect(() => {\n    if (!searchParams.get('query')) {\n      return;\n    }\n        (async function fetchMovies() {\n        try {\n      const response = await fetchSearchMovies(searchParams);\n        setMovies(response);\n        if (!response.length) {\n          alert('Nothing found for your request');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }, [searchParams]);\n\n  const handlChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  const handlSubmit = e => {\n      e.preventDefault();\n      const currentQuery = query.trim();\n    if (!currentQuery) {\n      return alert('Please enter a valid request!');\n    }\n    setSearchParams({ query: currentQuery });\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handlSubmit}>\n        <input type=\"text\" value={query} onChange={handlChange}></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies && <MoviesList movies={movies} url={' '} location={location} />}\n    </>\n  );\n}"],"names":["movies","location","map","movie","id","title","to","state","from","SearchMovies","useState","query","setQuery","useSearchParams","searchParams","setSearchParams","setMovies","useLocation","useEffect","get","fetchSearchMovies","response","length","alert","console","error","onSubmit","e","preventDefault","currentQuery","trim","type","value","onChange","currentTarget","url"],"sourceRoot":""}