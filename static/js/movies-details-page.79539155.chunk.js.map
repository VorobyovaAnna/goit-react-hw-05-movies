{"version":3,"file":"static/js/movies-details-page.79539155.chunk.js","mappings":"gRAGaA,E,QAAYC,GAAAA,QAAH,4D,SCEP,SAASC,IAAqB,IAAD,IAClCC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAgBf,OAdAC,EAAAA,EAAAA,YAAU,YACV,mCAAC,8GAEsBC,EAAAA,EAAAA,IAAiBV,GAFvC,OAESW,EAFT,OAGGP,EAASO,GAHZ,gDAKGN,EAAS,KALZ,yDAAD,yDAQC,CAACL,EAASK,KAMX,iCACE,mBAAQO,KAAK,SAASC,QAL1B,WAAmB,IAAD,IAChBR,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUO,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,MAIhC,qBAGCZ,IACC,UAACN,EAAD,YACI,gBACImB,IAAG,6CAAwCb,EAAMc,aACjDC,IAAKf,EAAMgB,SAEf,4BACI,wBAAKhB,EAAMgB,SACX,wCAAgBhB,EAAMiB,iBACtB,sCACA,uBAAIjB,EAAMkB,YACV,oCACA,wBACKlB,EAAMmB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAClB,wBACKA,GADID,eAQvB,mBACA,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAME,GAAG,OAAOZ,MAAO,CAAEC,KAAI,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAUO,aAAZ,aAAE,EAAiBC,MAAhD,qBAIF,yBACE,SAAC,KAAD,CAAMW,GAAG,UAAUZ,MAAO,CAAEC,KAAI,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAUO,aAAZ,aAAE,EAAiBC,MAAnD,8BAMN,mBACA,SAAC,KAAD","sources":["views/MovieDetailsPage.styled.js","views/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const MovieCard = styled.section`\n  display: flex;\n  padding: 20px;\n`;","import { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { fetchDetailsFilm } from 'services/api';\nimport { MovieCard } from './MovieDetailsPage.styled';\n\nexport default function MoviesDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n    \n    useEffect(() => {\n    (async function detailsFilm() {\n      try {\n        const data = await fetchDetailsFilm(movieId);\n        setMovie(data);\n      } catch (error) {\n        navigate('/');\n      }\n    })();\n  }, [movieId, navigate]);\n\n  function goBack() {\n    navigate(location?.state?.from ?? '/');\n  }\n    return (\n    <>\n      <button type=\"button\" onClick={goBack}>\n        Go back\n      </button>\n      {movie && (\n        <MovieCard>\n            <img\n                src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n                alt={movie.title}\n            />\n            <div>\n                <h2>{movie.title}</h2>\n                <p>User score: {movie.vote_average}</p>\n                <h3>Overview</h3>\n                <p>{movie.overview}</p>\n                <h3>Genres</h3>\n                <ul>\n                    {movie.genres.map(({ id, name }) => (\n                    <li key={id}>\n                        {name}\n                    </li>\n                    ))}\n                </ul>\n            </div>\n        </MovieCard>           \n      )}\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: location?.state?.from }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location?.state?.from }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <hr />\n      <Outlet />\n    </>\n  );\n}"],"names":["MovieCard","styled","MoviesDetailsPage","movieId","useParams","useState","movie","setMovie","navigate","useNavigate","location","useLocation","useEffect","fetchDetailsFilm","data","type","onClick","state","from","src","poster_path","alt","title","vote_average","overview","genres","map","id","name","to"],"sourceRoot":""}